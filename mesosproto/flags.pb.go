// Code generated by protoc-gen-go.
// source: flags.proto
// DO NOT EDIT!

/*
Package mesosproto is a generated protocol buffer package.

It is generated from these files:
	flags.proto
	log.proto
	mesos.proto
	messages.proto
	state.proto

It has these top-level messages:
	Firewall
	Promise
	Action
	Metadata
	Record
	PromiseRequest
	PromiseResponse
	WriteRequest
	WriteResponse
	LearnedMessage
	RecoverRequest
	RecoverResponse
	FrameworkID
	OfferID
	SlaveID
	TaskID
	ExecutorID
	ContainerID
	FrameworkInfo
	HealthCheck
	CommandInfo
	ExecutorInfo
	MasterInfo
	SlaveInfo
	Value
	Attribute
	Resource
	TrafficControlStatistics
	ResourceStatistics
	ResourceUsage
	PerfStatistics
	Request
	Offer
	TaskInfo
	TaskStatus
	Filters
	Environment
	Parameter
	Parameters
	Credential
	Credentials
	ACL
	ACLs
	RateLimit
	RateLimits
	Volume
	ContainerInfo
	Labels
	Label
	Port
	Ports
	DiscoveryInfo
	Task
	StatusUpdate
	StatusUpdateRecord
	SubmitSchedulerRequest
	SubmitSchedulerResponse
	ExecutorToFrameworkMessage
	FrameworkToExecutorMessage
	RegisterFrameworkMessage
	ReregisterFrameworkMessage
	FrameworkRegisteredMessage
	FrameworkReregisteredMessage
	UnregisterFrameworkMessage
	DeactivateFrameworkMessage
	ResourceRequestMessage
	ResourceOffersMessage
	LaunchTasksMessage
	RescindResourceOfferMessage
	ReviveOffersMessage
	RunTaskMessage
	KillTaskMessage
	StatusUpdateMessage
	StatusUpdateAcknowledgementMessage
	LostSlaveMessage
	ReconcileTasksMessage
	FrameworkErrorMessage
	RegisterSlaveMessage
	ReregisterSlaveMessage
	SlaveRegisteredMessage
	SlaveReregisteredMessage
	UnregisterSlaveMessage
	MasterSlaveConnection
	PingSlaveMessage
	PongSlaveMessage
	ShutdownFrameworkMessage
	ShutdownExecutorMessage
	UpdateFrameworkMessage
	CheckpointResourcesMessage
	UpdateSlaveMessage
	RegisterExecutorMessage
	ExecutorRegisteredMessage
	ExecutorReregisteredMessage
	ExitedExecutorMessage
	ReconnectExecutorMessage
	ReregisterExecutorMessage
	ShutdownMessage
	Archive
	TaskHealthStatus
	HookExecuted
	Entry
	Operation
*/
package mesosproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Initializes firewall rules to allow access control of the
// libprocess endpoints.
type Firewall struct {
	DisabledEndpoints *Firewall_DisabledEndpointsRule `protobuf:"bytes,1,opt,name=disabled_endpoints" json:"disabled_endpoints,omitempty"`
	XXX_unrecognized  []byte                          `json:"-"`
}

func (m *Firewall) Reset()         { *m = Firewall{} }
func (m *Firewall) String() string { return proto.CompactTextString(m) }
func (*Firewall) ProtoMessage()    {}

func (m *Firewall) GetDisabledEndpoints() *Firewall_DisabledEndpointsRule {
	if m != nil {
		return m.DisabledEndpoints
	}
	return nil
}

type Firewall_DisabledEndpointsRule struct {
	Paths            []string `protobuf:"bytes,1,rep,name=paths" json:"paths,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Firewall_DisabledEndpointsRule) Reset()         { *m = Firewall_DisabledEndpointsRule{} }
func (m *Firewall_DisabledEndpointsRule) String() string { return proto.CompactTextString(m) }
func (*Firewall_DisabledEndpointsRule) ProtoMessage()    {}

func (m *Firewall_DisabledEndpointsRule) GetPaths() []string {
	if m != nil {
		return m.Paths
	}
	return nil
}
